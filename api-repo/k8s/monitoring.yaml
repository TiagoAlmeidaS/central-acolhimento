# Central de Acolhimento - Monitoring Configuration
# Prometheus and Grafana setup

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'central-acolhimento-api'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - central-acolhimento
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: api-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'central-acolhimento-llm'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - central-acolhimento
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: llm-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        scrape_interval: 30s
        metrics_path: /metrics
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
        scrape_interval: 30s
        metrics_path: /metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  central-acolhimento.yml: |
    groups:
      - name: central-acolhimento
        rules:
          - alert: APIServiceDown
            expr: up{job="central-acolhimento-api"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "API Service is down"
              description: "Central de Acolhimento API service has been down for more than 1 minute."
          
          - alert: LLMServiceDown
            expr: up{job="central-acolhimento-llm"} == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "LLM Service is down"
              description: "Central de Acolhimento LLM service has been down for more than 1 minute."
          
          - alert: HighAPIResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="central-acolhimento-api"}[5m])) > 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High API response time"
              description: "95th percentile response time is above 1 second for more than 5 minutes."
          
          - alert: HighLLMResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="central-acolhimento-llm"}[5m])) > 5
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High LLM response time"
              description: "95th percentile LLM response time is above 5 seconds for more than 5 minutes."
          
          - alert: HighErrorRate
            expr: rate(http_requests_total{job="central-acolhimento-api",status=~"5.."}[5m]) / rate(http_requests_total{job="central-acolhimento-api"}[5m]) > 0.05
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate"
              description: "Error rate is above 5% for more than 5 minutes."
          
          - alert: DatabaseConnectionFailure
            expr: increase(database_connection_errors_total[5m]) > 10
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Database connection failures"
              description: "More than 10 database connection failures in the last 5 minutes."
          
          - alert: LLMProcessingFailure
            expr: increase(llm_processing_errors_total[5m]) > 5
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "LLM processing failures"
              description: "More than 5 LLM processing failures in the last 5 minutes."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=200h'
          - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-rules
          mountPath: /etc/prometheus/rules/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-rules
        configMap:
          name: prometheus-rules
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
